{"version":3,"sources":["components/icons/arrowDouble.svg","components/icons/arrowSingle.svg","logo.svg","components/icons/contact.svg","components/icons/payment.svg","components/icons/city.svg","components/icons/tic-tac-toe.svg","components/icons/link.svg","components/icons/stack.svg","components/icons/setting.svg","components/icons.js","components/ticTacToe.js","components/accounts/accountsLogic.js","components/accounts/accountsCards.js","components/selectComp.js","components/accounts/accountsComp.js","components/cities/citiesPojo.js","components/cities/fetchFunc.js","components/cities/cityCards.js","components/cities/selectComp.js","components/cities/cityComp.js","components/linkedLists/linkedListLogic.js","components/linkedLists/linkCardComp.js","components/linkedLists/iconComp.js","components/linkedLists/linkedListComp.js","components/stackQueue/stackFunctions.js","components/stackQueue/stackCardComp.js","components/stackQueue/stackComp.js","components/settings/themeContext.js","components/settings/settingComp.js","App.js","index.js"],"names":["module","exports","MyIcon","icons","key","src","contact","name","tic","accounts","cities","link","stack","setting","this","map","icon","className","alt","onClick","props","React","Component","Square","value","Board","i","squares","renderSquare","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","move","desc","jumpTo","handleClick","Account","accountName","balance","Number","amount","withdraw","AccountController","message","userAccounts","nameToCap","toLowerCase","split","words","charAt","toUpperCase","substring","join","capAccName","capName","newAccount","push","accountNameToCheck","accountKey","accountToRemove","forEach","account","splice","indexOf","accounObject","transaction","accountIndex","deposit","totalBalance","reduce","accumulator","user","sort","account1","account2","maxAccount","minAccount","AccountCardComp","delete","bind","SelectComp","newAccController","AccountControllerComp","addAccount","e","accountController","checkAccountExists","accountBal","updateDisplays","deleteAccount","removeAccount","totalBal","maxBal","minBal","operationControl","selectedAccount","balanceInp","getAccountIndex","maxBalance","minBalance","allCards","type","placeholder","ref","input","required","min","City","cityName","latitude","longitude","population","id","hemisphere","peopleIn","peopleOut","Community","byName","keyCount","lastKey","newCity","whichSphere","howBig","serverData","city","createCity","checkExist","cityIndex","cityToUpdate","cityObj","change","peopleMoving","movedOut","movedIn","totalPopulation","city1","city2","url","fetchFunctions","postData","data","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","response","json","statusText","clearData","getData","addData","cityData","deleteData","updateData","CityCardComp","index","newCommunity","CityComp","componentDidMount","async","onLoad","community","loadCitiesServer","checkCityExists","deleteCity","cityId","populationControl","selectOptions","selectedCity","options","selectedIndex","getAttribute","updatedCity","getCityById","typeOfMove","populationInp","totalPop","mostNorth","getMostNorthern","mostSouth","getMostSouthern","changeMe","ListNode","subject","show","forwardNode","CardComp","node","IconComp","list","insert","newNode","head","first","last","next","previous","nodeToDel","total","totalAmount","currentNode","arrowDouble","arrowSingle","ListDisplay","useState","setSubject","setAmount","counter","setCounter","card","setCard","setMessage","deleteCard","cardController","console","log","target","onChange","firstCap","functions","fifo","shift","lifo","pop","style","width","StackDisplay","users","setUsers","cards","setCards","updateCards","updateUsersArray","updatedUsers","ThemeContext","createContext","ThemeSetting","theme","useContext","backgroundColour","handleBackgroundColour","App","pageController","page","pages","mainPage","gamePage","accountPage","cityPage","listPage","stackQueuePage","settingsPage","logo","href","rel","context","contextType","ReactDOM","render","setBackgroundColour","contextValues","Provider","children","document","getElementById"],"mappings":"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","file":"static/js/main.94e09b26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrowDouble.b889b2d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowSingle.1c221b13.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.9a893aa5.svg\";","module.exports = __webpack_public_path__ + \"static/media/payment.da98c0a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.3204090b.svg\";","module.exports = __webpack_public_path__ + \"static/media/tic-tac-toe.56a6fe9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.ea5a45b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/stack.bcf956bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/setting.eb6cdbc2.svg\";","import React from \"react\";\nimport contact from \"./icons/contact.svg\";\nimport accounts from \"./icons/payment.svg\";\nimport cities from \"./icons/city.svg\";\nimport tic from \"./icons/tic-tac-toe.svg\";\nimport link from \"./icons/link.svg\";\nimport stack from \"./icons/stack.svg\";\nimport setting from \"./icons/setting.svg\";\n\nclass MyIcon extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.icons = [\n\t\t\t{ key: \"main\", src: contact, name: \"main\" },\n\t\t\t{ key: \"tic\", src: tic, name: \"tic\" },\n\t\t\t{ key: \"accounts\", src: accounts, name: \"accounts\" },\n\t\t\t{ key: \"cities\", src: cities, name: \"cities\" },\n\t\t\t{ key: \"link\", src: link, name: \"link\" },\n\t\t\t{ key: \"stack\", src: stack, name: \"stack\" },\n\t\t\t{ key: \"settings\", src: setting, name: \"settings\" }\n\t\t];\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.icons.map(icon => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"Icons\"\n\t\t\t\t\t\tsrc={icon.src}\n\t\t\t\t\t\talt={icon.name}\n\t\t\t\t\t\tkey={icon.key}\n\t\t\t\t\t\tonClick={this.props.onClick}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MyIcon;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./ticTacToe.css\";\n\nfunction Square(props) {\n\treturn (\n\t\t<button className=\"square\" onClick={() => props.onClick()}>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\nclass Board extends React.Component {\n\trenderSquare(i) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tvalue={this.props.squares[i]}\n\t\t\t\tonClick={() => this.props.onClick(i)}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"game-box\">\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thistory: [\n\t\t\t\t{\n\t\t\t\t\tsquares: Array(9).fill(null)\n\t\t\t\t}\n\t\t\t],\n\t\t\tstepNumber: 0,\n\t\t\txIsNext: true\n\t\t};\n\t}\n\n\thandleClick(i) {\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst squares = current.squares.slice();\n\t\tif (calculateWinner(squares) || squares[i]) {\n\t\t\treturn;\n\t\t}\n\t\tsquares[i] = this.state.xIsNext ? \"X\" : \"O\";\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: squares\n\t\t\t\t}\n\t\t\t]),\n\t\t\tstepNumber: history.length,\n\t\t\txIsNext: !this.state.xIsNext\n\t\t});\n\t}\n\tjumpTo(step) {\n\t\tthis.setState({\n\t\t\tstepNumber: step,\n\t\t\txIsNext: step % 2 === 0\n\t\t});\n\t}\n\n\trender() {\n\t\tconst history = this.state.history;\n\t\tconst current = history[this.state.stepNumber];\n\t\tconst winner = calculateWinner(current.squares);\n\n\t\tconst moves = history.map((step, move) => {\n\t\t\tconst desc = move ? \"Go to move #\" + move : \"Reset Board!\";\n\t\t\treturn (\n\t\t\t\t<li key={move}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-move\"\n\t\t\t\t\t\tonClick={() => this.jumpTo(move)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{desc}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\tlet status;\n\t\tif (winner) {\n\t\t\tstatus = \"The winner is \" + winner;\n\t\t} else{\n\t\t\tstatus = \"The Next Player is \" + (this.state.xIsNext ? \"X\" : \"O\");\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<h3>{status}</h3>\n\n\t\t\t\t\t<Board\n\t\t\t\t\t\tsquares={current.squares}\n\t\t\t\t\t\tonClick={i => this.handleClick(i)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<ol>{moves}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// ========================================\n\n// ReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6]\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (\n\t\t\tsquares[a] &&\n\t\t\tsquares[a] === squares[b] &&\n\t\t\tsquares[a] === squares[c]\n\t\t) {\n\t\t\treturn squares[a];\n\t\t}\n\t}\n\tfor (let i = 0; i <= squares.length; i++) {\n\t\tif(squares[i]=== null) return null;\n\t}\n\treturn \"No one.\";\n\t\n}\nexport default Game;\n","//  this file contain the classes to create and manade the accounts\nexport class Account {\n\tconstructor(key, accountName, balance) {\n\t\tthis.key = Number(key);\n\t\tthis.accountName = accountName;\n\t\tthis.balance = Number(balance);\n\t}\n\n\tdeposit(amount) {\n\t\tthis.balance = this.balance + amount;\n\t\treturn this.balance;\n\t}\n\n\twithdraw(amount) {\n\t\tlet withdraw = this.balance - amount;\n\t\tif (withdraw >= 0) {\n\t\t\tthis.balance = withdraw;\n\t\t\treturn withdraw;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\n\nexport class AccountController {\n\tconstructor() {\n\t\tthis.message = \"Please create a new account\";\n\t\tthis.userAccounts = [];\n\t\tthis.key = 0;\n\t}\n\n\tcapName(nameToCap) {\n\t\treturn nameToCap\n\t\t\t.toLowerCase()\n\t\t\t.split(\" \")\n\t\t\t.map(words => words.charAt(0).toUpperCase() + words.substring(1))\n\t\t\t.join(\" \");\n\t}\n\n\taddAccount(accountName, balance) {\n\t\tthis.key++;\n\t\tlet capAccName = this.capName(accountName);\n\t\tconst newAccount = new Account(this.key, capAccName, balance);\n\t\tthis.userAccounts.push(newAccount);\n\t\tthis.message = `${newAccount.accountName} account has been created`;\n\t}\n\n\tcheckAccountExists(accountNameToCheck) {\n\t\tfor (let accountObj of this.userAccounts) {\n\t\t\tif (accountObj.accountName === accountNameToCheck) {\n\t\t\t\tthis.message = `${accountNameToCheck} account already exists`;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tremoveAccount(accountKey) {\n\t\tlet accountToRemove;\n\t\tthis.userAccounts.forEach(account => {\n\t\t\tif (account.key === accountKey) {\n\t\t\t\taccountToRemove = account;\n\t\t\t}\n\t\t});\n\t\tthis.message = `${accountToRemove.accountName} account was deleted`;\n\t\tthis.userAccounts.splice(this.userAccounts.indexOf(accountToRemove), 1);\n\t}\n\n\tgetAccountIndex(accountName) {\n\t\tlet accounObject;\n\t\tthis.userAccounts.forEach(key => {\n\t\t\tif (key.accountName === accountName) {\n\t\t\t\taccounObject = key;\n\t\t\t}\n\t\t});\n\t\treturn this.userAccounts.indexOf(accounObject);\n\t}\n\n\toperationControl(transaction, amount, accountIndex) {\n\t\tlet accountName = this.userAccounts[accountIndex].accountName;\n\t\tif (transaction === \"deposit\") {\n\t\t\tthis.userAccounts[accountIndex].deposit(amount);\n\t\t\tthis.message = `$${amount} have been deposited to your ${accountName} account`;\n\t\t\treturn this.userAccounts[accountIndex].balance;\n\t\t} else {\n\t\t\tlet withdraw = this.userAccounts[accountIndex].withdraw(amount);\n\t\t\tif (withdraw === false) {\n\t\t\t\tthis.message =\n\t\t\t\t\t\"There is not enough funds in the selected account\";\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.balance = withdraw;\n\t\t\t\tthis.message = `$${amount} have been withdrawed from your ${accountName} account`;\n\t\t\t\treturn this.userAccounts[accountIndex].balance;\n\t\t\t}\n\t\t}\n\t}\n\n\ttotalBalance() {\n\t\tlet totalBalance = this.userAccounts.reduce(\n\t\t\t(accumulator, user) => accumulator + user.balance,\n\t\t\t0\n\t\t);\n\t\treturn `$${totalBalance}`;\n\t}\n\n\tmaxBalance() {\n\t\tif (this.userAccounts.length !== 0) {\n\t\t\tthis.userAccounts.sort(\n\t\t\t\t(account1, account2) => account2.balance - account1.balance\n\t\t\t);\n\t\t\tlet maxAccount = this.userAccounts[0];\n\t\t\treturn `$${maxAccount.balance} in ${maxAccount.accountName} account`;\n\t\t}\n\t\treturn \"N/A\";\n\t}\n\n\tminBalance() {\n\t\tif (this.userAccounts.length !== 0) {\n\t\t\tthis.userAccounts.sort(\n\t\t\t\t(account1, account2) => account1.balance - account2.balance\n\t\t\t);\n\t\t\tlet minAccount = this.userAccounts[0];\n\t\t\treturn `$${minAccount.balance} in ${minAccount.accountName} account`;\n\t\t}\n\t\treturn \"N/A\";\n\t}\n}\n\n\n","import React, { Component } from \"react\";\n\nclass AccountCardComp extends Component {\n\trender() {\n\t\tlet { key, accountName, balance } = this.props.account;\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<h3 className=\"card-header text-dark\">{accountName}</h3>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<p className=\"card-text text-dark\">${balance}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-footer\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\tonClick={this.props.delete.bind(this, key)}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AccountCardComp;\n","import React, { Component } from \"react\";\n// import \"./main.css\";\n\nexport default class SelectComp extends Component {\n\trender() {\n\t\tconst { key, accountName } = this.props.account;\n\t\treturn (\n\t\t\t<option className=\"input\" key={key}>\n\t\t\t\t{accountName}\n\t\t\t</option>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport \"../main.css\";\nimport { AccountController } from \"./accountsLogic\";\nimport AccountCardComp from \"./accountsCards\";\nimport SelectComp from \"../selectComp\";\n\nlet newAccController = new AccountController();\nclass AccountControllerComp extends React.Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\taccountController: newAccController,\n\t\t\ttotalBal: 0,\n\t\t\tmaxBal: \"N/A\",\n\t\t\tminBal: \"N/A\"\n\t\t};\n\t}\n\n\taddAccount = e => {\n\t\tlet a = this.state.accountController;\n\t\tif (this.accountName.value === \"\") {\n\t\t\ta.message = \"Please enter a valid account name\";\n\t\t\tthis.setState({ accountController: a });\n\t\t\treturn;\n\t\t}\n\t\tlet checkAccount = a.checkAccountExists(this.accountName.value);\n\t\tif (checkAccount === false) {\n\t\t\ta.addAccount(this.accountName.value, this.accountBal.value);\n\t\t}\n\t\tthis.accountName.value = \"\";\n\t\tthis.accountBal.value = \"\";\n\t\tthis.setState({ accountController: a });\n\t\tthis.updateDisplays();\n\t};\n\tdeleteAccount = key => {\n\t\tlet a = this.state.accountController;\n\t\ta.removeAccount(key);\n\t\tif (a.userAccounts.length === 1) {\n\t\t\tthis.setState({ totalBal: \"\", maxBal: \"\", minBal: \"\" });\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({ accountController: a });\n\t\tthis.updateDisplays();\n\t};\n\toperationControl = e => {\n\t\tlet a = this.state.accountController;\n\t\tif (this.selectedAccount.value === \"default\") {\n\t\t\ta.message = \"Please select a valid account name\";\n\t\t\tthis.setState({ accountController: a });\n\t\t\treturn;\n\t\t}\n\t\ta.operationControl(\n\t\t\tthis.transaction.value,\n\t\t\tNumber(this.balanceInp.value),\n\t\t\ta.getAccountIndex(this.selectedAccount.value)\n\t\t);\n\t\tthis.selectedAccount.value = \"default\";\n\t\tthis.balanceInp.value = \"\";\n\n\t\tthis.setState({ accountController: a });\n\t\tthis.updateDisplays();\n\t};\n\tupdateDisplays = e => {\n\t\tlet a = this.state.accountController;\n\t\tconst totalBal = a.totalBalance();\n\t\tconst maxBal = a.maxBalance();\n\t\tconst minBal = a.minBalance();\n\t\tthis.setState({ accountController: a });\n\t\tthis.setState({\n\t\t\ttotalBal: totalBal,\n\t\t\tmaxBal: maxBal,\n\t\t\tminBal: minBal\n\t\t});\n\n\t\treturn;\n\t};\n\n\trender() {\n\t\tlet a = this.state.accountController;\n\t\tlet allCards = a.userAccounts.map(account => {\n\t\t\treturn (\n\t\t\t\t<AccountCardComp\n\t\t\t\t\tkey={account.key}\n\t\t\t\t\taccount={account}\n\t\t\t\t\tdelete={this.deleteAccount}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"accountControllerComp\">\n\t\t\t\t<div className=\"card-deck\">{allCards}</div>\n\t\t\t\t<h5>{this.state.accountController.message}</h5>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{/* REPORT PANEL */}\n\t\t\t\t\t<div className=\"panel-group\">\n\t\t\t\t\t\t<div className=\"panel report\">\n\t\t\t\t\t\t\t<p name=\"total\">\n\t\t\t\t\t\t\t\tTotal Balance: {this.state.totalBal}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p name=\"maxBalance\">\n\t\t\t\t\t\t\t\tMaximum Balance: {this.state.maxBal}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p name=\"minBalance\">\n\t\t\t\t\t\t\t\tMinimum Balance: {this.state.minBal}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* ACCOUNT PANEL */}\n\t\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t\t<h3>Your Accounts</h3>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t\t\tAccount Name:{\" \"}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\t\tname=\"accountName\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Example: Checking\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.accountName}\n\t\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\t\tthis.accountName = input;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t\t\tOpening Balance:{\" \"}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\t\tname=\"accountBal\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"0.00\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.accountBal}\n\t\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\t\tthis.accountBal = input;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tvalue=\"Create Account\"\n\t\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\t\tthis.addAccount(e);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* TRANSACTION PANEL */}\n\t\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h3>Quick Transactions</h3>\n\t\t\t\t\t\t\t\tSelect Account:\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tname=\"selectedAccount\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.selectedAccount}\n\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\tthis.selectedAccount = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"default\">\n\t\t\t\t\t\t\t\t\t\tSelect Account\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{a.userAccounts.map(account => (\n\t\t\t\t\t\t\t\t\t\t<SelectComp\n\t\t\t\t\t\t\t\t\t\t\tkey={account.key}\n\t\t\t\t\t\t\t\t\t\t\taccount={account}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tTransactions:\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tname=\"transaction\"\n\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\tthis.transaction = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"deposit\">Deposit</option>\n\t\t\t\t\t\t\t\t\t<option value=\"withdraw\">Withdraw</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t$:\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\tname=\"balanceInp\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"0.00\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.balanceInp}\n\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\tthis.balanceInp = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tvalue=\"Submit\"\n\t\t\t\t\t\t\t\t\tonClick={this.operationControl}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default AccountControllerComp;\n","class City {\n\tconstructor(key, cityName, latitude, longitude, population) {\n\t\tthis.key = key;\n\t\tthis.id = key;\n\t\tthis.cityName = cityName;\n\t\tthis.latitude = latitude;\n\t\tthis.longitude = longitude;\n\t\tthis.population = Number(population);\n\t\tthis.hemisphere = \"\";\n\t\tthis.type = \"\";\n\t}\n\n\tshow() {\n\t\tlet showStr = `name:${this.cityName}, latitude:${this.latitude}, longitude:${this.longitude}, population:${this.population}`;\n\t\treturn showStr;\n\t}\n\tmovedIn(peopleIn) {\n\t\tthis.population += peopleIn;\n\t}\n\tmovedOut(peopleOut) {\n\t\tthis.population -= peopleOut;\n\t}\n\thowBig() {\n\t\tlet population = this.population;\n\t\tswitch (true) {\n\t\t\tcase population > 100000:\n\t\t\t\tthis.type = \"City\";\n\t\t\t\tbreak;\n\t\t\tcase population > 20000:\n\t\t\t\tthis.type = \"Large town\";\n\t\t\t\tbreak;\n\t\t\tcase population > 1000:\n\t\t\t\tthis.type = \"Town\";\n\t\t\t\tbreak;\n\t\t\tcase population > 100:\n\t\t\t\tthis.type = \"Village\";\n\t\t\t\tbreak;\n\t\t\tcase population >= 1:\n\t\t\t\tthis.type = \"Hamlet\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.type;\n\t}\n\twhichSphere() {\n\t\tlet latitude = this.latitude;\n\t\tif (latitude > 0) {\n\t\t\treturn (this.hemisphere = \"northern hemisphere\");\n\t\t} else {\n\t\t\treturn (this.hemisphere = \"southern hemisphere\");\n\t\t}\n\t}\n}\n\nclass Community {\n\tconstructor() {\n\t\tthis.cities = [];\n\t\tthis.byName = {};\n\t\tthis.keyCount = 1;\n\t\tthis.message = \"Please enter a city\";\n\t}\n\tcapName(nameToCap) {\n\t\treturn nameToCap\n\t\t\t.toLowerCase()\n\t\t\t.split(\" \")\n\t\t\t.map(words => words.charAt(0).toUpperCase() + words.substring(1))\n\t\t\t.join(\" \");\n\t}\n\tcreateCity(lastKey, cityName, latitude, longitude, population) {\n\t\tthis.keyCount = lastKey;\n\t\tlet capName = this.capName(cityName);\n\t\tconst newCity = new City(\n\t\t\tthis.keyCount++,\n\t\t\tcapName,\n\t\t\tlatitude,\n\t\t\tlongitude,\n\t\t\tpopulation\n\t\t);\n\t\tthis.hemisphere = newCity.whichSphere();\n\t\tthis.type = newCity.howBig();\n\t\tthis.cities.push(newCity);\n\t\tthis.byName[cityName] = newCity;\n\t\tthis.message = `${cityName} has been added`;\n\t\treturn newCity;\n\t}\n\tloadCitiesServer(serverData) {\n\t\tif (serverData.length !== 0) {\n\t\t\tserverData.map(city => {\n\t\t\t\treturn this.createCity(\n\t\t\t\t\tcity.key,\n\t\t\t\t\tcity.cityName,\n\t\t\t\t\tcity.latitude,\n\t\t\t\t\tcity.longitude,\n\t\t\t\t\tcity.population\n\t\t\t\t);\n\t\t\t});\n\t\t\tthis.message = `Current cities have been loaded from the server`;\n\t\t}\n\t\treturn this.cities;\n\t}\n\tcheckCityExists(latitude, longitude) {\n\t\tlet checkExist = false;\n\t\tif (this.cities.length >= 1) {\n\t\t\tthis.cities.forEach(city => {\n\t\t\t\tif (\n\t\t\t\t\tcity.latitude === latitude &&\n\t\t\t\t\tcity.longitude === longitude\n\t\t\t\t) {\n\t\t\t\t\tcheckExist = true;\n\t\t\t\t\tthis.message = `${city.cityName} already exists`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn checkExist;\n\t}\n\tdeleteCity(cityIndex) {\n\t\tlet cityName = this.cities[cityIndex].cityName;\n\t\tthis.cities.splice(cityIndex, 1);\n\t\tthis.message = `${cityName} has been deteled from your list`;\n\t}\n\tgetCityById(id) {\n\t\tlet cityToUpdate = \"\";\n\t\tfor (let b of this.cities) {\n\t\t\tif (b.id === Number(id)) {\n\t\t\t\tcityToUpdate = b;\n\t\t\t}\n\t\t}\n\t\treturn cityToUpdate;\n\t}\n\tpopulationControl(cityObj, change, peopleMoving) {\n\t\tif (change === \"moveOut\") {\n\t\t\tif (cityObj.population < peopleMoving) {\n\t\t\t\tthis.message =\n\t\t\t\t\t\"Population moving out must be less than current population\";\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcityObj.movedOut(peopleMoving);\n\t\t} else {\n\t\t\tcityObj.movedIn(peopleMoving);\n\t\t}\n\t\tthis.message = `${cityObj.cityName} population has been updated`;\n\t\treturn cityObj;\n\t}\n\ttotalPopulation() {\n\t\tlet totalPopulation = this.cities.reduce(\n\t\t\t(accumulator, city) => accumulator + city.population,\n\t\t\t0\n\t\t);\n\t\treturn totalPopulation;\n\t}\n\tgetMostNorthern() {\n\t\tif (this.cities.length >= 1) {\n\t\t\tthis.cities.sort((city1, city2) => city2.latitude - city1.latitude);\n\t\t\treturn this.cities[0].cityName;\n\t\t}\n\t\treturn \"N/A\";\n\t}\n\tgetMostSouthern() {\n\t\tif (this.cities.length >= 1) {\n\t\t\tthis.cities.sort((city1, city2) => city1.latitude - city2.latitude);\n\t\t\treturn this.cities[0].cityName;\n\t\t}\n\t\treturn \"N/A\";\n\t}\n}\nexport { City, Community };\n","const url = \"http://127.0.0.1:5000/\";\n\nconst fetchFunctions = {\n\tasync postData(url = \"\", data = {}) {\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: \"POST\", // *GET, POST, PUT, DELETE, etc.\n\t\t\tmode: \"cors\", // no-cors, *cors, same-origin\n\t\t\tcache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\tcredentials: \"same-origin\", // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t\t// 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tredirect: \"follow\", // manual, *follow, error\n\t\t\treferrer: \"no-referrer\", // no-referrer, *client\n\t\t\tbody: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\t\t});\n\n\t\tconst json = await response.json(); // parses JSON response into native JavaScript objects\n\t\tjson.status = response.status;\n\t\tjson.statusText = response.statusText;\n\t\treturn json;\n\t},\n\n\tasync clearData() {\n\t\treturn await this.postData(url + \"clear\");\n\t},\n\n\tasync getData() {\n\t\tlet data = await this.postData(url + \"all\");\n\t\treturn data;\n\t},\n\n\tasync addData(cityData) {\n\t\tlet data = await this.postData(url + \"add\", cityData);\n\t\treturn data;\n\t},\n\n\tasync deleteData(key) {\n\t\tlet data = await this.postData(url + \"delete\", { key: Number(key) });\n\t\treturn data;\n\t},\n\n\tasync updateData(cityObj) {\n\t\tlet data = await this.postData(url + \"update\", cityObj);\n\t\treturn data;\n\t}\n};\n\nexport default fetchFunctions;\n","import React, { Component } from \"react\";\n\nclass CityCardComp extends Component {\n\trender() {\n\t\tconst {\n\t\t\tcityName,\n\t\t\themisphere,\n\t\t\tlatitude,\n\t\t\tlongitude,\n\t\t\tpopulation,\n\t\t\ttype\n\t\t} = this.props.city;\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<h3 className=\"card-header text-dark\">{cityName}</h3>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<p className=\"card-text text-dark\">\n\t\t\t\t\t\tLatitude: {latitude} Longitude: {longitude}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t{`${cityName} is located on the ${hemisphere}, has a population of ${population} people and is considered a ${type}.`}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-footer\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\tonClick={this.props.delete.bind(this, this.props.index)}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CityCardComp;\n","import React, { Component } from \"react\";\n\nexport default class SelectComp extends Component {\n\trender() {\n\t\tconst { key, cityName, id } = this.props.city;\n\t\treturn (\n\t\t\t<option key={key} id={id}>\n\t\t\t\t{cityName}\n\t\t\t</option>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"../main.css\";\nimport { Community } from \"./citiesPojo\";\nimport fetchFunctions from \"./fetchFunc\";\nimport CityCardComp from \"./cityCards\";\nimport SelectComp from \"./selectComp\";\n\nlet newCommunity = new Community();\n\nclass CityComp extends Component {\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tcommunity: newCommunity,\n\t\t\tchangeMe: 0,\n\t\t\ttransaction: \"moveIn\",\n\t\t\tselectedCity: \"\",\n\t\t\tpopulationInp: 0,\n\t\t\ttotalPop: 0,\n\t\t\tmostNorth: \"N/A\",\n\t\t\tmostSouth: \"N/A\"\n\t\t};\n\t}\n\tcomponentDidMount = async () => {\n\t\tlet onLoad = await fetchFunctions.getData();\n\t\tlet a = this.state.community;\n\t\ta.loadCitiesServer(onLoad);\n\t\tthis.lastKey = a.keyCount;\n\t\tthis.setState({ community: a });\n\t\tthis.updateDisplays();\n\t};\n\n\tcreateCity = e => {\n\t\tlet a = this.state.community;\n\t\tlet lastKey = a.keyCount;\n\t\tlet newCity;\n\t\tif (this.cityName.value === \"\") {\n\t\t\ta.message = \"Please enter a valid city name.\";\n\t\t\tthis.setState({ community: a });\n\t\t\treturn;\n\t\t}\n\t\tif (this.latitude.value > 90 || this.latitude.value < -90) {\n\t\t\ta.message = \"Please enter a valid latitude.\";\n\t\t\tthis.setState({ community: a });\n\t\t\treturn;\n\t\t}\n\t\tif (this.longitude.value > 180 || this.longitude.value < -180) {\n\t\t\ta.message = \"Please enter a valid longitude.\";\n\t\t\tthis.setState({ community: a });\n\t\t\treturn;\n\t\t}\n\t\tlet checkCityExists = a.checkCityExists(\n\t\t\tthis.latitude.value,\n\t\t\tthis.longitude.value\n\t\t);\n\n\t\tif (checkCityExists === false) {\n\t\t\tnewCity = a.createCity(\n\t\t\t\tlastKey,\n\t\t\t\tthis.cityName.value,\n\t\t\t\tthis.latitude.value,\n\t\t\t\tthis.longitude.value,\n\t\t\t\tthis.population.value\n\t\t\t);\n\t\t}\n\t\tthis.cityName.value = \"\";\n\t\tthis.latitude.value = \"\";\n\t\tthis.longitude.value = \"\";\n\t\tthis.population.value = \"\";\n\t\tthis.setState({ community: a });\n\t\tfetchFunctions.addData(newCity);\n\t\tthis.updateDisplays();\n\t};\n\tdeleteCity = index => {\n\t\tlet cityId = this.state.community.cities[index].id;\n\t\tthis.state.community.deleteCity(index);\n\t\tfetchFunctions.deleteData(cityId);\n\t\tthis.updateDisplays();\n\t};\n\tpopulationControl = () => {\n\t\tlet a = this.state.community;\n\t\tlet selectOptions = this.selectedCity.options;\n\n\t\tif (selectOptions.length === 1) {\n\t\t\ta.message = \"Please create a city\";\n\t\t\tthis.setState({ community: a });\n\t\t\treturn;\n\t\t}\n\t\tif (selectOptions.selectedIndex === 0) {\n\t\t\ta.message = \"Please select a city\";\n\t\t\tthis.setState({ community: a });\n\t\t\treturn;\n\t\t}\n\t\tlet cityId = Number(\n\t\t\tselectOptions[this.selectedCity.selectedIndex].getAttribute(\"id\")\n\t\t);\n\t\tlet updatedCity = a.populationControl(\n\t\t\ta.getCityById(cityId),\n\t\t\tthis.typeOfMove.value,\n\t\t\tNumber(this.populationInp.value)\n\t\t);\n\t\tif (updatedCity !== false) {\n\t\t\tfetchFunctions.updateData(updatedCity);\n\t\t}\n\t\tthis.populationInp.value = \"\";\n\t\tthis.setState({ community: a });\n\t\tthis.updateDisplays();\n\t};\n\tupdateDisplays = () => {\n\t\tlet a = this.state.community;\n\t\tthis.setState({\n\t\t\ttotalPop: a.totalPopulation(),\n\t\t\tmostNorth: a.getMostNorthern(),\n\t\t\tmostSouth: a.getMostSouthern()\n\t\t});\n\t};\n\n\trender() {\n\t\tlet a = this.state.community.cities;\n\t\tlet allCards = a.map((city, index) => {\n\t\t\treturn (\n\t\t\t\t<CityCardComp\n\t\t\t\t\tkey={city.key}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tcity={city}\n\t\t\t\t\tdelete={this.deleteCity}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"Community\">\n\t\t\t\t<div className=\"card-deck\">{allCards}</div>\n\t\t\t\t<h5>{this.state.community.message}</h5>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t{/* REPORT PANEL */}\n\t\t\t\t\t<div className=\"panel report\">\n\t\t\t\t\t\t<p name=\"total\">\n\t\t\t\t\t\t\tTotal Population: {this.state.totalPop}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p name=\"maxBalance\">\n\t\t\t\t\t\t\tMost Northern City: {this.state.mostNorth}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p name=\"minBalance\">\n\t\t\t\t\t\t\tMost Sourthern City: {this.state.mostSouth}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* CREATE CITY PANEL */}\n\n\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t<h3>Your Cities</h3>\n\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t<label>City Name:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"cityName\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Example: Calgary\"\n\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\tthis.cityName = input;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<label>Population:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"population\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\tthis.population = input;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<label>Latitude:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"latitude\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tplaceholder=\"+/- 00.000000\"\n\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\tthis.latitude = input;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<label>Longitude:</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"longitude\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tplaceholder=\"+/- 00.000000\"\n\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\tthis.longitude = input;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\tthis.createCity(e);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate City\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* TRASACTIONS PANEL */}\n\t\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t\t<h2>City Updates</h2>\n\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label>City:</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\tname=\"selectedCity\"\n\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\tthis.selectedCity = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"default\">\n\t\t\t\t\t\t\t\t\t\tSelect City{\" \"}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t{a.map((city, index) => (\n\t\t\t\t\t\t\t\t\t\t<SelectComp\n\t\t\t\t\t\t\t\t\t\t\tkey={city.key}\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\tcity={city}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label>Type of Move:</label>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\tname=\"transaction\"\n\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\tthis.typeOfMove = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value=\"moveIn\">Moving In</option>\n\t\t\t\t\t\t\t\t\t<option value=\"moveOut\">Moving Out</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label>People Moving:</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\tname=\"populationInp\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\t\t\t\t\tref={input => {\n\t\t\t\t\t\t\t\t\t\tthis.populationInp = input;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\t\t\tonClick={this.populationControl}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default CityComp;\n","export class ListNode {\n\tconstructor(subject, amount) {\n\t\tthis.subject = subject;\n\t\tthis.amount = amount;\n\t\tthis.forwardNode = null;\n\t}\n\tshow = () => {\n\t\treturn `${this.subject}, ${this.amount}`;\n\t};\n}\n\nexport class LinkedList {\n\tconstructor() {\n\t\tthis.head = null;\n\t\tthis.current = this.head;\n\t\tthis.message = \"Your list in empty.\";\n\t}\n\n\tinsert = (subject, amount) => {\n\t\tlet newNode = new ListNode(subject, amount);\n\t\t// when list is empty\n\t\tif (this.head === null) {\n\t\t\tthis.head = newNode;\n\t\t\tthis.current = newNode;\n\t\t} else {\n\t\t\t//insert node on last\n\t\t\tif (this.current.forwardNode === null) {\n\t\t\t\tthis.current.forwardNode = newNode;\n\t\t\t\tthis.current = newNode;\n\t\t\t} else {\n\t\t\t\t//insert after the current node\n\t\t\t\tnewNode.forwardNode = this.current.forwardNode;\n\t\t\t\tthis.current.forwardNode = newNode;\n\t\t\t\tthis.current = newNode;\n\t\t\t}\n\t\t}\n\t\tthis.message = `${this.current.subject} added to list`;\n\t\treturn this.current;\n\t};\n\tfirst = () => {\n\t\tthis.current = this.head;\n\n\t\treturn this.current ? this.current : null;\n\t};\n\tlast = () => {\n\t\twhile (this.current.forwardNode !== null) {\n\t\t\tthis.current = this.current.forwardNode;\n\t\t}\n\t\treturn this.current;\n\t};\n\tnext = () => {\n\t\tif (this.current.forwardNode === null) {\n\t\t\treturn this.current;\n\t\t}\n\t\tthis.current = this.current.forwardNode;\n\t\treturn this.current;\n\t};\n\tprevious = () => {\n\t\tif (this.current === this.head) {\n\t\t\treturn this.current ? this.current : null;\n\t\t}\n\t\tlet previous = this.head;\n\t\twhile (this.current !== previous.forwardNode) {\n\t\t\tprevious = previous.forwardNode;\n\t\t}\n\t\tthis.current = previous;\n\t\treturn this.current ? this.current : null;\n\t};\n\tdelete = () => {\n\t\tif (this.current === null) return null;\n\t\tif (this.current === this.head && this.current.forwardNode === null) {\n\t\t\tthis.head = null;\n\t\t\tthis.current = this.head;\n\t\t\tthis.message = \"Your list in empty.\";\n\t\t\treturn;\n\t\t}\n\t\tif (this.current === this.head) {\n\t\t\tthis.message = `${this.current.subject} has been deleted`;\n\t\t\tthis.head = this.current.forwardNode;\n\t\t\tthis.current = this.head;\n\t\t\treturn;\n\t\t}\n\t\tif (this.current.forwardNode === null) {\n\t\t\tthis.message = `${this.current.subject} has been deleted`;\n\t\t\tthis.previous();\n\t\t\tthis.current.forwardNode = null;\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet nodeToDel = this.current;\n\t\t\tthis.message = `${nodeToDel.subject} has been deleted`;\n\t\t\tthis.previous();\n\t\t\tthis.current.forwardNode = nodeToDel.forwardNode;\n\t\t\treturn;\n\t\t}\n\t};\n\ttotal = () => {\n\t\tlet totalAmount = 0;\n\t\tif (this.current === null) return totalAmount;\n\t\tlet currentNode = this.current;\n\t\tthis.current = this.head;\n\t\twhile (this.current.forwardNode !== null) {\n\t\t\ttotalAmount += this.current.amount;\n\t\t\tthis.next();\n\t\t}\n\t\ttotalAmount += this.current.amount;\n\t\tthis.current = currentNode;\n\t\treturn totalAmount;\n\t};\n}\n","import React from \"react\";\n\nconst CardComp = props => {\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h3 className=\"card-header text-dark\">{props.node.subject}</h3>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<p className=\"card-text text-dark\">\n\t\t\t\t\tAmount:{` ${props.node.amount}`}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"card-footer\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\talt=\"Delete\"\n\t\t\t\t\tonClick={props.onClick}\n\t\t\t\t>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CardComp;\n","import React from \"react\";\nimport \"../main.css\";\n\nconst IconComp = props => {\n\treturn (\n\t\t<img\n\t\t\tclassName=\"icon\"\n\t\t\tid={`id${props.icon.name}`}\n\t\t\tsrc={props.icon.src}\n\t\t\talt={props.icon.name}\n\t\t\tkey={props.icon.key}\n\t\t\tonClick={props.onClick}\n\t\t/>\n\t);\n};\n\nexport default IconComp;\n","import React, { useState } from \"react\";\nimport \"../main.css\";\nimport { LinkedList } from \"./linkedListLogic\";\nimport CardComp from \"./linkCardComp\";\nimport IconComp from \"./iconComp\";\nimport arrowDouble from \"../icons/arrowDouble.svg\";\nimport arrowSingle from \"../icons/arrowSingle.svg\";\n\nconst list = new LinkedList();\nconst icons = [\n\t{ key: \"leftDouble\", src: arrowDouble, name: \"First\" },\n\t{ key: \"leftSingle\", src: arrowSingle, name: \"Previous\" },\n\t{ key: \"rightSingle\", src: arrowSingle, name: \"Next\" },\n\t{ key: \"rightDouble\", src: arrowDouble, name: \"Last\" }\n];\n\nconst ListDisplay = () => {\n\tlet [subject, setSubject] = useState(\"\");\n\tlet [amount, setAmount] = useState(\"\");\n\tlet [counter, setCounter] = useState(0);\n\tlet [card, setCard] = useState(\"\");\n\tlet [message, setMessage] = useState(\"List is empty\");\n\n\tconst capName = () => {\n\t\tlet firstCap = subject\n\t\t\t.toLowerCase()\n\t\t\t.split(\" \")\n\t\t\t.map(words => words.charAt(0).toUpperCase() + words.substring(1))\n\t\t\t.join(\" \");\n\t\tsetSubject((subject = firstCap));\n\t};\n\n\tconst createCard = e => {\n\t\tif (subject === \"\" || amount === \"\") {\n\t\t\tconsole.log(\"from if\");\n\t\t\tsetMessage(\"Please enter a valid name/amount\");\n\t\t\treturn;\n\t\t}\n\t\tcapName();\n\t\tlist.insert(subject, amount);\n\t\tsetCounter(counter++);\n\t\tsetCard(\n\t\t\t(card = (\n\t\t\t\t<CardComp\n\t\t\t\t\tkey={counter}\n\t\t\t\t\tnode={list.current}\n\t\t\t\t\tonClick={deleteCard}\n\t\t\t\t/>\n\t\t\t))\n\t\t);\n\t\tsetMessage(list.message);\n\t\tsetSubject(\"\");\n\t\tsetAmount(\"\");\n\t};\n\tconst deleteCard = e => {\n\t\tlist.delete();\n\t\tif (!list.current) {\n\t\t\tsetCard(\"\");\n\t\t\treturn;\n\t\t}\n\t\tsetCard(\n\t\t\t(card = (\n\t\t\t\t<CardComp\n\t\t\t\t\tkey={counter}\n\t\t\t\t\tnode={list.current}\n\t\t\t\t\tonClick={deleteCard}\n\t\t\t\t/>\n\t\t\t))\n\t\t);\n\t\tsetMessage(list.message);\n\t};\n\tconst cardController = e => {\n\t\tconsole.log(list.current);\n\t\tif (!list.current) return;\n\t\tif (e.target.alt === \"First\") {\n\t\t\tlist.first();\n\t\t}\n\t\tif (e.target.alt === \"Previous\") {\n\t\t\tlist.previous();\n\t\t}\n\t\tif (e.target.alt === \"Next\") {\n\t\t\tlist.next();\n\t\t}\n\t\tif (e.target.alt === \"Last\") {\n\t\t\tlist.last();\n\t\t}\n\t\tsetCard(\n\t\t\t(card = (\n\t\t\t\t<CardComp\n\t\t\t\t\tkey={counter}\n\t\t\t\t\tnode={list.current}\n\t\t\t\t\tonClick={deleteCard}\n\t\t\t\t/>\n\t\t\t))\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"icon-group\">\n\t\t\t\t\t<IconComp icon={icons[0]} onClick={cardController} />\n\t\t\t\t\t<label>First</label>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-group\">\n\t\t\t\t\t<IconComp icon={icons[1]} onClick={cardController} />\n\t\t\t\t\t<label>Previous</label>\n\t\t\t\t</div>\n\t\t\t\t<div>{card}</div>\n\t\t\t\t<div className=\"icon-group\">\n\t\t\t\t\t<IconComp icon={icons[2]} onClick={cardController} />\n\t\t\t\t\t<label>Next</label>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"icon-group\">\n\t\t\t\t\t<IconComp icon={icons[3]} onClick={cardController} />\n\t\t\t\t\t<label>Last</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<h5>{message}</h5>\n\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t<h3>Your List</h3>\n\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tTo Buy:{\" \"}\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"subject\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Example: Apples\"\n\t\t\t\t\t\t\t\tvalue={subject}\n\t\t\t\t\t\t\t\tonChange={e => setSubject(e.target.value)}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\tAmount:{\" \"}\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\tname=\"amount\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\tplaceholder=\"0.00\"\n\t\t\t\t\t\t\t\tvalue={amount}\n\t\t\t\t\t\t\t\tonChange={e => setAmount(e.target.value)}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\t\tonClick={createCard}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Item\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<p>{`Your total amount of items is ${list.total()}`}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default ListDisplay;\n","const functions = {\n\tfifo: list => {\n\t\tlist.shift();\n\t\treturn list;\n\t},\n\tlifo: list => {\n\t\tlist.pop();\n\t\treturn list;\n\t}\n};\nexport default functions;\n","import React from \"react\";\n\nconst CardComp = props => {\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h3 className=\"card-header text-dark\">{`User ${props.name}`}</h3>\n\t\t\t<div className=\"card-body\">\n\t\t\t\t<img\n\t\t\t\t\talt=\"users\"\n\t\t\t\t\tstyle={{ width: \"8rem\" }}\n\t\t\t\t\tsrc={`https://robohash.org/${props.name}?set=set5`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CardComp;\n","import React, { useState } from \"react\";\nimport \"../main.css\";\nimport functions from \"./stackFunctions\";\nimport CardComp from \"./stackCardComp\";\n\nconst StackDisplay = () => {\n\tlet [counter, setCounter] = useState(1);\n\tlet [users, setUsers] = useState([]);\n\tlet [cards, setCards] = useState([]);\n\tlet [message, setMessage] = useState(\"Please add a new user\");\n\n\tconst createCard = e => {\n\t\tsetCounter(counter + 1);\n\t\tusers.push(counter);\n\t\tsetUsers(users);\n\t\tupdateCards();\n\t};\n\tconst updateCards = () => {\n\t\tlet allCards = users.map((user, index) => {\n\t\t\treturn <CardComp key={index} name={user} />;\n\t\t});\n\t\tsetCards(allCards);\n\t};\n\tconst updateUsersArray = updatedUsers => {\n\t\tsetUsers(updatedUsers);\n\t\tupdateCards();\n\t};\n\n\tconst fifo = e => {\n\t\tif (users.length === 0) return setMessage(`Please add a new user`);\n\t\tsetMessage(`User ${users[0]} has been removed`);\n\t\tlet updatedUsers = functions.fifo(users);\n\t\tupdateUsersArray(updatedUsers);\n\t};\n\tconst lifo = e => {\n\t\tif (users.length === 0) return setMessage(`Please add a new user`);\n\t\tsetMessage(`User ${users[users.length - 1]} has been removed`);\n\t\tlet updatedUsers = functions.lifo(users);\n\t\tupdateUsersArray(updatedUsers);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"panel\">\n\t\t\t\t\t<h3>Your Stack/Queue</h3>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\tonClick={createCard}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd User\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\tonClick={fifo}\n\t\t\t\t\t>\n\t\t\t\t\t\tFirst In/First Out\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-primary btn-sm\"\n\t\t\t\t\t\tonClick={lifo}\n\t\t\t\t\t>\n\t\t\t\t\t\tLast In/First Out\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<h5>{message}</h5>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"container\">{cards}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default StackDisplay;\n","import React, { useState } from \"react\";\n\nexport function ThemeContextProvider(props) {\n\t// const themes = {\n\t// \tblack: \"black\",\n\t// \tblue: \"light\"\n\t// };\n\tlet [backgroundColour, setBackgroundColour] = useState(\"light\");\n\n\tconst contextValues = {\n\t\tbackgroundColour: backgroundColour,\n\t\thandleBackgroundColour: handleBackgroundColour\n\t};\n\n\tfunction handleBackgroundColour(e) {\n\t\t// setBackgroundColour(backgroundColour === \"black\" ? \"light\" : \"black\");\n\t\tsetBackgroundColour(e.target.value);\n\t}\n\n\treturn (\n\t\t<ThemeContext.Provider value={contextValues}>\n\t\t\t{props.children}\n\t\t</ThemeContext.Provider>\n\t);\n}\n\nexport const ThemeContext = React.createContext(\"black\");\n","import React, { useContext } from \"react\";\nimport \"../main.css\";\nimport { ThemeContext } from \"./themeContext\";\n\nconst ThemeSetting = () => {\n\tconst theme = useContext(ThemeContext);\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Settings</h3>\n\t\t\t<div className=\"container\">\n\t\t\t\t<label>Background Color:</label>\n\t\t\t\t<select\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tname=\"backgroundColor\"\n\t\t\t\t\tvalue={theme.backgroundColour}\n\t\t\t\t\tonChange={theme.handleBackgroundColour}\n\t\t\t\t>\n\t\t\t\t\t<option value=\"dark\">Dark</option>\n\t\t\t\t\t<option value=\"light\">Light</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ThemeSetting;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport MyIcon from \"./components/icons\";\nimport Game from \"./components/ticTacToe\";\nimport AccountControllerComp from \"./components/accounts/accountsComp\";\nimport CityComp from \"./components/cities/cityComp\";\nimport ListDisplay from \"./components/linkedLists/linkedListComp\";\nimport StackDisplay from \"./components/stackQueue/stackComp\";\nimport ThemeSetting from \"./components/settings/settingComp\";\nimport { ThemeContext } from \"../src/components/settings/themeContext\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\tstatic contextType = ThemeContext;\n\tconstructor() {\n\t\tsuper();\n\t\tthis.icon = \"\";\n\t\tthis.pages = {\n\t\t\tmainPage: (\n\t\t\t\t<div>\n\t\t\t\t\t<header className={\"App-header\"}>\n\t\t\t\t\t\t<h3>Welcome to Your React App</h3>\n\t\t\t\t\t\t<h5>Explore all tabs and have fun!</h5>\n\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tEdit <code>src/App.js</code> and save to reload.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLearn React\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</header>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tgamePage: (\n\t\t\t\t<div>\n\t\t\t\t\t<Game />\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taccountPage: (\n\t\t\t\t<div className=\"bigContainer\">\n\t\t\t\t\t<AccountControllerComp />\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tcityPage: (\n\t\t\t\t<div className=\"bigContainer\">\n\t\t\t\t\t<CityComp />\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tlistPage: (\n\t\t\t\t<div className=\"bigContainer\">\n\t\t\t\t\t<ListDisplay />\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tstackQueuePage: (\n\t\t\t\t<div className=\"bigContainer\">\n\t\t\t\t\t<StackDisplay />\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tsettingsPage: (\n\t\t\t\t<div className=\"bigContainer\">\n\t\t\t\t\t<ThemeSetting />\n\t\t\t\t</div>\n\t\t\t)\n\t\t};\n\t\tthis.state = { page: this.pages.mainPage, theme: \"dark\" };\n\t}\n\n\tpageController = e => {\n\t\tif (e.target.alt === \"main\") {\n\t\t\tthis.setState({ page: this.pages.mainPage });\n\t\t}\n\t\tif (e.target.alt === \"tic\") {\n\t\t\tthis.setState({ page: this.pages.gamePage });\n\t\t}\n\t\tif (e.target.alt === \"accounts\") {\n\t\t\tthis.setState({ page: this.pages.accountPage });\n\t\t}\n\t\tif (e.target.alt === \"cities\") {\n\t\t\tthis.setState({ page: this.pages.cityPage });\n\t\t}\n\t\tif (e.target.alt === \"link\") {\n\t\t\tthis.setState({ page: this.pages.listPage });\n\t\t}\n\t\tif (e.target.alt === \"stack\") {\n\t\t\tthis.setState({ page: this.pages.stackQueuePage });\n\t\t}\n\t\tif (e.target.alt === \"settings\") {\n\t\t\tthis.setState({ page: this.pages.settingsPage });\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={` App ${this.context.backgroundColour}`}>\n\t\t\t\t<div className=\"All-Icons\">\n\t\t\t\t\t<MyIcon onClick={this.pageController} />\n\t\t\t\t</div>\n\t\t\t\t<header className=\"App-header\">{this.state.page}</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ThemeContextProvider } from \"./components/settings/themeContext.js\";\n\nReactDOM.render(\n\t<ThemeContextProvider>\n\t\t<App />\n\t</ThemeContextProvider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}